[project]
name = "ccdata_handler"
version = "1.0.0"
description = "Unified data ingestion framework for CryptoCompare data with comprehensive monitoring, caching, and performance optimization"
authors = [
    {name = "CryptoCompare Data Team", email = "data@cryptocompare.com"}
]
readme = "README_UNIFIED_INGESTION.md"
license = {text = "MIT"}
keywords = ["cryptocurrency", "data", "ingestion", "api", "database"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Office/Business :: Financial",
]

dependencies = [
    # Core dependencies
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "tenacity>=8.2.0",
    
    # Database dependencies
    "singlestoredb>=1.0.0",
    "polars>=0.20.0",
    "connectorx>=0.3.3",
    "pyarrow>=20.0.0",
    
    # Async and performance dependencies
    "aiohttp>=3.9.0",
    "aiomysql>=0.2.0",
    "asyncio-throttle>=1.0.2",
    
    # Caching dependencies
    "redis>=5.0.0",
    "diskcache>=5.6.0",
    
    # Monitoring and metrics
    "psutil>=5.9.0",
    "prometheus-client>=0.19.0",
    
    # Data validation and processing
    "pydantic>=2.5.0",
    "pandas>=2.1.0",
    
    # Logging and configuration
    "structlog>=23.2.0",
    "click>=8.1.0",
]

requires-python = ">=3.9"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]

testing = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "factory-boy>=3.3.0",
    "freezegun>=1.2.0",
]

monitoring = [
    "grafana-api>=1.0.3",
    "influxdb-client>=1.38.0",
    "elasticsearch>=8.11.0",
]

performance = [
    "memory-profiler>=0.61.0",
    "py-spy>=0.3.14",
    "line-profiler>=4.1.0",
]

all = [
    "ccdata_handler[dev,testing,monitoring,performance]"
]

[project.scripts]
ccdata-ingest = "scripts.unified_ingest:main"
ccdata-validate = "scripts.validate_migration:main"
ccdata-benchmark = "scripts.performance_benchmark:main"

[project.urls]
Homepage = "https://github.com/cryptocompare/ccdata_handler"
Documentation = "https://ccdata-handler.readthedocs.io/"
Repository = "https://github.com/cryptocompare/ccdata_handler.git"
Issues = "https://github.com/cryptocompare/ccdata_handler/issues"
Changelog = "https://github.com/cryptocompare/ccdata_handler/blob/main/CHANGELOG.md"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
include = ["src*"]

[tool.setuptools.package-data]
"*" = ["*.sql", "*.json", "*.yaml", "*.yml"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.7.0",
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "singlestoredb.*",
    "connectorx.*",
    "polars.*",
    "redis.*",
    "diskcache.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]